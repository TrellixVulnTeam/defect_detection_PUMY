MODEL:
  TYPE: "det"
  NAME: "FasterRCNN"
  PRETRAINED_MODEL_PATH: ""
  BACKBONE:
    type: "SwinTransformerV2"
    embed_dim: 128
    depths: [2, 2, 18, 2]
    num_heads: [4, 8, 16, 32]
    window_size: 14
    drop_path_rate: 0.5
    use_checkpoint: True
    out_indices: [0, 1, 2, 3]
  NECK:
    type: "FPN"
    in_channels: [128, 256, 512, 1024] #
    out_channels: 256
    num_outs: 5
  RPN_HEAD:
    type: 'RPNHead'
    in_channels: 256
    feat_channels: 256
    anchor_generator: {
      type: 'AnchorGenerator',
      scales: [8],
      ratios: [0.5, 1.0, 2.0],
      strides: [4, 8, 16, 32, 64]}
    bbox_coder: {
      type: 'DeltaXYWHBBoxCoder',
      target_means: [.0, .0, .0, .0],
      target_stds: [1.0, 1.0, 1.0, 1.0]}
    loss_cls: {
      type: 'CrossEntropyLoss', 
      use_sigmoid: True, 
      loss_weight: 1.0}
    loss_bbox: {
      type: 'SmoothL1Loss', 
      beta: 0.111111,
      loss_weight: 1.0}
  ROI_HEAD:
    type: 'CascadeRoIHead'
    num_stages: 3
    stage_loss_weights: [1, 0.5, 0.25]
    bbox_roi_extractor: {
      type: 'SingleRoIExtractor',
      roi_layer: {
        type: 'RoIAlign', 
        output_size: 7, 
        sampling_ratio: 0},
      out_channels: 256,
      featmap_strides: [4, 8, 16, 32]}
    bbox_head: 
    - {type: 'ConvFCBBoxHead',
       num_shared_convs: 4,
       num_shared_fcs: 1,
       in_channels: 256,
       conv_out_channels: 256,
       fc_out_channels: 1024,
       roi_feat_size: 7,
       num_classes: 80,
       bbox_coder: {
         type: 'DeltaXYWHBBoxCoder',
         target_means: [0., 0., 0., 0.],
         target_stds: [0.1, 0.1, 0.2, 0.2]},
       reg_class_agnostic: False,
       reg_decoded_bbox: True,
       loss_cls: {
         type: 'CrossEntropyLoss', 
         use_sigmoid: False, 
         loss_weight: 1.0},
       loss_bbox: {
         type: 'GIoULoss',
         loss_weight: 10.0}} 
    - {type: 'ConvFCBBoxHead',
       num_shared_convs: 4,
       num_shared_fcs: 1,
       in_channels: 256,
       conv_out_channels: 256,
       fc_out_channels: 1024,
       roi_feat_size: 7,
       num_classes: 80,
       bbox_coder: {
         type: 'DeltaXYWHBBoxCoder',
         target_means: [0., 0., 0., 0.],
         target_stds: [0.05, 0.05, 0.1, 0.1]},
       reg_class_agnostic: False,
       reg_decoded_bbox: True,
       loss_cls: {
         type: 'CrossEntropyLoss', 
         use_sigmoid: False, 
         loss_weight: 1.0},
       loss_bbox: {
         type: 'GIoULoss',
         loss_weight: 10.0}} 
    - {type: 'ConvFCBBoxHead',
       num_shared_convs: 4,
       num_shared_fcs: 1,
       in_channels: 256,
       conv_out_channels: 256,
       fc_out_channels: 1024,
       roi_feat_size: 7,
       num_classes: 80,
       bbox_coder: {
         type: 'DeltaXYWHBBoxCoder',
         target_means: [0., 0., 0., 0.],
         target_stds: [0.033, 0.033, 0.067, 0.067]},
       reg_class_agnostic: False,
       reg_decoded_bbox: True,
       loss_cls: {
         type: 'CrossEntropyLoss', 
         use_sigmoid: False, 
         loss_weight: 1.0},
       loss_bbox: {
         type: 'GIoULoss',
         loss_weight: 10.0}} 
  TRAIN_CFG:
    rpn: {
      assigner: {
        type: 'MaxIoUAssigner',
        pos_iou_thr: 0.7,
        neg_iou_thr: 0.3,
        min_pos_iou: 0.3,
        match_low_quality: True,
        ignore_iof_thr: -1},
      sampler: {
        type: 'RandomSampler',
        num: 256,
        pos_fraction: 0.5,
        neg_pos_ub: -1,
        add_gt_as_proposals: False},
      allowed_border: 0,
      pos_weight: -1,
      debug: False}
    rpn_proposal: {
      nms_across_levels: False,
      nms_pre: 2000,
      nms_post: 2000,
      max_num: 2000,
      iou_threshold: 0.7,
      min_bbox_size: 0}
    rcnn:
    - {
       assigner: {
         type: 'MaxIoUAssigner',
         pos_iou_thr: 0.5,
         neg_iou_thr: 0.5,
         min_pos_iou: 0.5,
         match_low_quality: False,
         ignore_iof_thr: -1},
       sampler: {
         type: 'RandomSampler',
         num: 512,
         pos_fraction: 0.25,
         neg_pos_ub: -1,
         add_gt_as_proposals: True},
       pos_weight: -1,
       debug: False}
    - {
       assigner: {
         type: 'MaxIoUAssigner',
         pos_iou_thr: 0.6,
         neg_iou_thr: 0.6,
         min_pos_iou: 0.6,
         match_low_quality: False,
         ignore_iof_thr: -1},
       sampler: {
         type: 'RandomSampler',
         num: 512,
         pos_fraction: 0.25,
         neg_pos_ub: -1,
         add_gt_as_proposals: True},
       pos_weight: -1,
       debug: False}
    - {
       assigner: {
         type: 'MaxIoUAssigner',
         pos_iou_thr: 0.7,
         neg_iou_thr: 0.7,
         min_pos_iou: 0.7,
         match_low_quality: False,
         ignore_iof_thr: -1},
       sampler: {
         type: 'RandomSampler',
         num: 512,
         pos_fraction: 0.25,
         neg_pos_ub: -1,
         add_gt_as_proposals: True},
       pos_weight: -1,
       debug: False}
  TEST_CFG:
    rpn: {
      nms_across_levels: False,
      nms_pre: 1000,
      nms_post: 1000,
      max_num: 1000,
      iou_threshold: 0.7,
      min_bbox_size: 0}
    rcnn: {
      score_thr: 0.001,
      nms: {
        type: 'soft_nms', 
        iou_threshold: 0.5},
      max_per_img: 100}
