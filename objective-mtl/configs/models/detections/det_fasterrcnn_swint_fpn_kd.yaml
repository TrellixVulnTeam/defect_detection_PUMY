MODEL:
  TYPE: "det"
  NAME: "FasterRCNNKD"
  PRETRAINED_MODEL_PATH: "meta/pretrained/swin_tiny_patch4_window7_224.pth"
  TEACHER_MODEL_PATH: "meta/pretrained/swin_large_moco_100m_ep3_washed.pth"
  BACKBONE:
    type: "SwinTransformer"
    embed_dim: 96
    depths: [2, 2, 6, 2]
    num_heads: [3, 6, 12, 24]
    out_indices: [0, 1, 2, 3]
  TEACHER_BACKBONE:
    type: "SwinTransformer"
    embed_dim: 192
    depths: [2, 2, 18, 2]
    num_heads: [6, 12, 24, 48]
    out_indices: [3]
  NECK:
    type: "FPN"
    in_channels: [96, 192, 384, 768] #
    out_channels: 256
    num_outs: 5
  EXTEND_NECK:
    type: 'ChannelAlginNeck'
    in_channels: 768
    hid_channels: 1536
    out_channels: 1536
  RPN_HEAD:
    type: 'RPNHead'
    in_channels: 256
    feat_channels: 256
    anchor_generator: {
      type: 'AnchorGenerator',
      scales: [8],
      ratios: [0.5, 1.0, 2.0],
      strides: [4, 8, 16, 32, 64]}
    bbox_coder: {
      type: 'DeltaXYWHBBoxCoder',
      target_means: [.0, .0, .0, .0],
      target_stds: [1.0, 1.0, 1.0, 1.0]}
    loss_cls: {
      type: 'CrossEntropyLoss', 
      use_sigmoid: True, 
      loss_weight: 1.0}
    loss_bbox: {
      type: 'L1Loss', 
      loss_weight: 1.0}
  ROI_HEAD:
    type: 'StandardRoIHead'
    bbox_roi_extractor: {
      type: 'SingleRoIExtractor',
      roi_layer: {
        type: 'RoIAlign', 
        output_size: 7, 
        sampling_ratio: 0},
      out_channels: 256,
      featmap_strides: [4, 8, 16, 32]}
    bbox_head: {
      type: 'Shared2FCBBoxHead',
      in_channels: 256,
      fc_out_channels: 1024,
      roi_feat_size: 7,
      num_classes: 80,
      bbox_coder: {
        type: 'DeltaXYWHBBoxCoder',
        target_means: [0., 0., 0., 0.],
        target_stds: [0.1, 0.1, 0.2, 0.2]},
      reg_class_agnostic: False,
      loss_cls: {
        type: 'CrossEntropyLoss', 
        use_sigmoid: False, 
        loss_weight: 1.0},
      loss_bbox: {
        type: 'L1Loss', 
        loss_weight: 1.0}}
  LOSS:
    type: 'MSELoss'
    loss_weight: 32.0
  TRAIN_CFG:
    rpn: {
      assigner: {
        type: 'MaxIoUAssigner',
        pos_iou_thr: 0.7,
        neg_iou_thr: 0.3,
        min_pos_iou: 0.3,
        match_low_quality: True,
        ignore_iof_thr: -1},
      sampler: {
        type: 'RandomSampler',
        num: 256,
        pos_fraction: 0.5,
        neg_pos_ub: -1,
        add_gt_as_proposals: False},
      allowed_border: -1,
      pos_weight: -1,
      debug: False}
    rpn_proposal: {
      nms_across_levels: False,
      nms_pre: 2000,
      nms_post: 1000,
      max_num: 1000,
      iou_threshold: 0.7,
      min_bbox_size: 0}
    rcnn: {
      assigner: {
        type: 'MaxIoUAssigner',
        pos_iou_thr: 0.5,
        neg_iou_thr: 0.5,
        min_pos_iou: 0.5,
        match_low_quality: False,
        ignore_iof_thr: -1},
      sampler: {
        type: 'RandomSampler',
        num: 512,
        pos_fraction: 0.25,
        neg_pos_ub: -1,
        add_gt_as_proposals: True},
      pos_weight: -1,
      debug: False}
  TEST_CFG:
    rpn: {
      nms_across_levels: False,
      nms_pre: 1000,
      nms_post: 1000,
      max_num: 1000,
      iou_threshold: 0.7,
      min_bbox_size: 0}
    rcnn: {
      score_thr: 0.05,
      nms: {
        type: 'common_nms', 
        iou_threshold: 0.5},
      max_per_img: 100}
